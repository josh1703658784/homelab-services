---

# notes
# ports are exposed to the host machine
# exposed only allows access by linked services
#
# EXAMPLE DEPLOYS
# https://gist.github.com/Webreaper/81ecda3ecc45fa61a16dfc90cfc4550d
# EXAMPLE DEPLOYS

# CAP_ADD/DROP information: http://rhelblog.redhat.com/2016/10/17/secure-your-containers-with-this-one-weird-trick/

# @TODO review these https://teddit.net/r/radarr/comments/hbwnb2/a_list_of_all_companion_tools_and_software/
# @TODO try https://dockersl.im
# @TODO run containers as non-root
# @TODO https://github.com/HaveAGitGat/Tdarr
# @TODO https://github.com/TheUltimateC0der/Listrr
# @TODO tailscale container instead of (or in addition to?) on metal?
# @TODO off-load plex trasncoding https://github.com/UnicornTranscoder/UnicornTranscoder

# p2p related apps: https://teddit.net/r/radarr/comments/hbwnb2/a_list_of_all_companion_tools_and_software/
#


version: "2.4"

services:



  proxy:
    # @TODO split into two containers: https://github.com/nginx-proxy/nginx-proxy#separate-containers
    #image: jwilder/nginx-proxy:alpine # alpine latest image
    image: jwilder/nginx-proxy@sha256:fb3b9b1dfbacdfd4ae9ba3f4a0e0994cedef81738c05975909a22ebe073ade6e # alpine
    #image: nginxproxy/nginx-proxy
      #read_only: true
    tmpfs:
      - /etc/nginx/dhparam/
      - /var/cache/nginx/client_temp/
      - /var/cache/nginx/proxy_temp/
      - /var/cache/nginx/fastcgi_temp/
      - /var/cache/nginx/uwsgi_temp/
      - /var/cache/nginx/scgi_temp/
      - /var/run/
      - /etc/nginx/conf.d/
      - /etc/nginx/certs/
      - /tmp
    cap_drop:
      - all
    cap_add:
      - net_bind_service  # for access to port 80 (<1024)
      - chown             # @TODO fix this in forked dockerfile
      - setgid            # @TODO fix this in forked dockerfile
      - setuid            # @TODO fix this in forked dockerfile
    environment:
      - DEFAULT_HOST=whoami.nas.local
    ports:
      # https://tonylawrence.com/posts/unix/synology/freeing-port-80/
      #- 80:80
      - 9999:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /volume1/data/docker/apps/nginx-proxy/certs:/etc/nginx/certs:ro
    restart: always


  whoami:
    # alpine
    #image: "jwilder/whoami:latest"
    image: jwilder/whoami@sha256:c621c699e1becc851a27716df9773fa9a3f6bccb331e6702330057a688fd1d5a
    read_only: true
    cap_drop:
      - all
    expose:
      - 8000
    user: nobody
    environment:
      - VIRTUAL_HOST=whoami.nas.local
      - VIRTUAL_PORT=8000
    restart: always


  transmission:
    #image: haugene/transmission-openvpn
    image: haugene/transmission-openvpn:latest
      #user: 1026:100 #"${UID}:${GID}"
    cap_drop:
      - ALL
    cap_add:
      - net_admin     # DOCUMENTED REQUIREMENT
      - mknod         # ALLOWS CREATION OF TUN/TAP IN /dev/net/tun
      - net_raw       # FOR PING IN HEALTHCHECK
      - setgid        # @TODO REVOLVE THIS WITH A FORKED DOCKERFILE
      - dac_override  # @TODO HIGH VULN, FIX WITH FORKED DOCKERFILE
      - setuid
    tmpfs:
      - /tmp
    volumes:
      - /volume1/data/docker/apps/transmission/data/completed:/data/completed
      - /volume1/data/docker/apps/transmission/data/incomplete:/data/incomplete
      - /volume1/data/docker/apps/transmission/data/transmission-home:/data/transmission-home
      # > openvpn-pre-start.sh copies the on-disk readonly openvpn config to a directory where it is modified
      # > by this container/service. It is not desirable to have these changes written back to disk.
      # > I much prefer having the modifications done from a pristine config every time
      - /volume1/data/docker/apps/vpn/config/openvpn-pre-start.sh:/scripts/openvpn-pre-start.sh:ro
      - /volume1/data/docker/apps/vpn/config/mullvad_userpass.txt:/config/openvpn-credentials.txt:ro
      - /volume1/data/docker/apps/vpn/config/mullvad_ch_zrh.ovpn:/readonly_vpn_config.ovpn:ro
    environment:
      - NETWORK_ACCESS=internal
      - VIRTUAL_HOST=transmission.nas.local,trans.nas.local,trans.nas.stonecat-shark.ts.net
      - VIRTUAL_PORT=9091
      - OPENVPN_PROVIDER=custom
      - OPENVPN_CONFIG=vpn_config
      - LOCAL_NETWORK=192.168.12.0/24
      - TRANSMISSION_PEER_PORT=56004
      - TRANSMISSION_PORT_FORWARDING_ENABLED=true
      - TRANSMISSION_ENCRYPTION=1 # prefer encrypted connections but not required
      - TRANSMISSION_PREFETCH_ENABLED=true
      - DROP_DEFAULT_ROUTE=true # maybe works, maybe breaks
      - LOG_TO_STDOUT=true
        #- PUID=1026
        #- PGID=100
    expose:
      - 9091
    sysctls:
      - "net.ipv6.conf.all.disable_ipv6=0"
    restart: always

  # media player
  # @TODO try to put this in bridge networking
  plex:
    image: lscr.io/linuxserver/plex:latest
    network_mode: host
    environment:
      #- NETWORK_ACCESS=internal
      - PUID=1026
      - PGID=100
      - VERSION=docker
        #- ADVERTISE_IP=http://192.168.12.184:32400/
      - ADVERTISE_IP=http://plex.nas.local:32400/
      - ALLOWED_NETWORKS=192.168.12.0/8  #192.168.1.0/24
      - TZ=America/Vancouver
    volumes:
      - /volume1/data/docker/apps/plex/config:/config
      - /volume1/data/docker/apps/plex/movies-handbrake-encodes:/movies-handbrake-encodes:ro
      - /volume1/data/docker/apps/plex/tv-handbrake-encodes:/tv-handbrake-encodes:ro
      - /volume1/data/docker/apps/sonarr/media-organized:/tv-organized:ro
      - /volume1/data/docker/apps/radarr/media-organized:/movies-organized:ro
    tmpfs:
      - /tmp
        #tmpfs:
        #  - /var/run/s6:exec
        #  - /app
        #  - /defaults
    restart: always


  # @TODO pin down basic hardening
  # movie
  radarr:
    image: lscr.io/linuxserver/radarr:latest
      #user: '1026'
    tmpfs:
      #- /var/run/s6:exec,rw
      - /tmp
    cap_drop:
      - all
    cap_add:
      - setgid        # @TODO REVOLVE THIS WITH A FORKED DOCKERFILE
      - setuid
      - chown # @TODO fix this in forked dockerfile
    environment:
      - S6_READ_ONLY_ROOT=1
      - S6_BEHAVIOUR_IF_STAGE2_FAILS=2
        #- NETWORK_ACCESS=internal
      - PUID=1026
      - PGID=100
      - TZ=America/Vancouver
      - VIRTUAL_HOST=radarr.nas.local,movies.nas.local,radarr.erdos.remote,movies.erdos.remote
      - VIRTUAL_PORT=7878
    volumes:
      - /volume1/data/docker/apps/radarr/config:/config
      - /volume1/data/docker/apps/radarr/media-organized:/data/media-organized
      - /volume1/data/docker/apps/radarr/media-recycling-bin:/data/media-recycling-bin
      - /volume1/data/docker/apps/transmission/data/completed/:/data/completed/
    expose:
      - 7878
    restart: always


  # Manages your TV library
  # sonarr
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    cap_drop:
      - all
    cap_add:
      - setgid
      - setuid
      - chown
    tmpfs:
      #- /var/run/s6:exec,rw
      - /tmp
    environment:
      #- S6_READ_ONLY_ROOT=1
      - NETWORK_ACCESS=internal
      - PUID=1026
      - PGID=100
      - TZ=America/Vancouver
      - VIRTUAL_HOST=sonarr.nas.local,tv.nas.local,sonarr.erdos.remote,tv.erdos.remote
      - VIRTUAL_PORT=8989
    volumes:
      - /volume1/data/docker/apps/sonarr/config:/config
      - /volume1/data/docker/apps/sonarr/media-organized:/data/media-organized
      - /volume1/data/docker/apps/transmission/data/completed:/data/completed
      - /volume1/data/docker/apps/sonarr/media-recycling-bin:/data/media-recycling-bin
    expose:
      - 8989
    restart: always

  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: always
    network_mode: bridge
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
    environment:
      - TZ=America/Vancouver
        #- PUID=${PUID}
        #- PGID=${PGID}
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=false
      - inContainer=true
      - nodeName=NotANode
      - NETWORK_ACCESS=internal
      - VIRTUAL_HOST=tdarr.nas.local,transcode.nas.local
      - VIRTUAL_PORT=8265
    volumes:
      - /volume1/data/docker/apps/tdarr/root/app/server:/app/server
      - /volume1/data/docker/apps/tdarr/root/app/configs:/app/configs
      - /volume1/data/docker/apps/tdarr/root/app/logs:/app/logs
        #- /media:/media
        #- /transcode_cache:/temp

  prowlarr:
    #image: lscr.io/linuxserver/prowlarr:develop
    image: lscr.io/linuxserver/prowlarr:develop
    environment:
      - PUID=1026
      - PGID=100
      - S6_READ_ONLY_ROOT=1
      - NETWORK_ACCESS=internal
      - VIRTUAL_HOST=prowlarr.nas.local,prowlarr.erdos.remote
      - VIRTUAL_PORT=9696
      - TZ=America/Vancouver
    expose: 
      - 9696
    volumes:
      - /volume1/data/docker/apps/prowlarr/config:/config
    tmpfs:
      - /tmp
    restart: always


  # bazarr
  # find subtitles
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    environment:
      - NETWORK_ACCESS=internal
      - PUID=1026
      - PGID=100
      - TZ=America/Vancouver
      - VIRTUAL_HOST=subs.nas.local,subtitles.nas.local,bazarr.nas.local,subtitles.nas.local,bazarr.erdos.remote
      - VIRTUAL_PORT=6767
    cap_drop:
      - all
    cap_add:
      - setgid
      - setuid
      - chown
    volumes:
      - /volume1/data/docker/apps/bazarr/config:/config
      - /volume1/data/docker/apps/bazarr/downloaded_subtitles:/subtitles
      - /volume1/data/docker/apps/sonarr/media-organized:/tv
      - /volume1/data/docker/apps/radarr/media-organized:/movies
    tmpfs:
      - /tmp
    expose:
      - 6767
    restart: always


  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    cap_drop:
      - ALL
    cap_add:
      - setgid
      - setuid
      - chown
    environment:
      - S6_READ_ONLY_ROOT=1
      - NETWORK_ACCESS=internal
      - PUID=1026
      - PGID=1000
      - TZ=America/Vancouver
      - VIRTUAL_HOST=overseerr.nas.local,requests.nas.local,overseerr.erdos.remote
      - VIRTUAL_PORT=5055
    networks:
      - traefik_hub
    volumes:
      - /volume1/data/docker/apps/overseerr/config:/config
    tmpfs:
      - /tmp
    expose:
      - 5055
    restart: always


  # Bypasses Cloud Flare
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:v1.2.9 # prowlerr does not support v2
    user: "nobody:nobody"
    read_only: true
    cap_drop:
      - ALL
    tmpfs:
      - /tmp
    environment:
      - NETWORK_ACCESS=internal
        #- CAPTCHA_SOLVER=anticaptcha
        #- ANTI_CAPTCHA_APIKEY=123456789
      - TZ=America/Vancouver
      - VIRTUAL_HOST=flaresolverr.nas.local,flare.nas.local,flare.erdos.remote
      - VIRTUAL_PORT=8191
    expose:
      - 8191
    restart: always

  readarr:
    # version is at < 1.0 so let's kleep up with the latest updates
    image: lscr.io/linuxserver/readarr:nightly
    environment:
      - PUID=1026
      - PGID=100
      - TZ=America/Vancouver
      - NETWORK_ACCESS=internal
      - VIRTUAL_HOST=readarr.nas.local,read.nas.local,books.nas.local
      - VIRTUAL_PORT=8787
        #volumes:
        #  - /volume1/data/docker/apps/readarr/config:/config
        #  - /volume1/data/docker/apps/readarr/books:/books:ro
        #  - /volume1/data/docker/apps/transmission/data/completed:/downloads:ro
    restart: unless-stopped


  wiki:
    image: lscr.io/linuxserver/wikijs:latest
    cap_add:
      - setgid
      - setuid
      - chown
    volumes:
      - /volume1/data/docker/apps/wikijs/config:/config
      - /volume1/data/docker/apps/wikijs/data:/data
    environment:
      - NETWORK_ACCESS=internal
      - VIRTUAL_HOST=wiki.nas.local
      - VIRTUAL_PORT=3000
      - PUID=1026
      - PGID=100
      - TZ=America/Vancouver
    expose:
      - 3000
    restart: always


      #cloudflared:
      #  image: cloudflare/cloudflared:latest
      #  container_name: tunnel
      #  command:
      #    - \--no-autoupdate run
      #    - \--token eyJhIjoiODIxMDE5MDAzZTVlMmYzMmZkY2ZjOGE4ZDc5ZTIwYWMiLCJ0IjoiNWEzMTgyMTQtYzEzYi00MmM4LThmZWItNjRjMTBiZTFhM2MyIiwicyI6IlpHTTBNelEyTW1VdE1XWXlZaTAwWkdFNUxUZzBNMkV0TUdObU0yRmlOREk0Tm1OayJ9

volumes:
  copy_openvpn_config:


networks:
  traefik_hub:
