---

# notes
# ports are exposed to the host machine
# exposed only allows access by linked services
#
# EXAMPLE DEPLOYS
# https://gist.github.com/Webreaper/81ecda3ecc45fa61a16dfc90cfc4550d
# EXAMPLE DEPLOYS

# CAP_ADD/DROP information: http://rhelblog.redhat.com/2016/10/17/secure-your-containers-with-this-one-weird-trick/

# @TODO: wireguard, flexget, git server, backblaze, anonaddy

# p2p related apps: https://teddit.net/r/radarr/comments/hbwnb2/a_list_of_all_companion_tools_and_software/

version: "2.4"

services:

  nginx-proxy:
    image: jwilder/nginx-proxy
    #image: nginxproxy/nginx-proxy:latest
    #image: nginxproxy/nginx-proxy:alpine
    container_name: proxy
    networks:
      - whoami
      - transmission-movies
      - transmission-tv
      - transmission-books
      # @TODO  plex??????
      - radarr
      - sonarr
      - organizr
      - jackett
    environment:
      - DEFAULT_HOST=whoami.erdos.local
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  whoami:
    image: jwilder/whoami
    container_name: whoami
    networks:
      - whoami
    expose:
      - "8000"
    environment:
      - VIRTUAL_HOST=whoami.erdos.local
      - VIRTUAL_PORT=8000


  transmission-movies:
    container_name: transmission-movies
    image: lscr.io/linuxserver/transmission:latest
    #network_mode: service:temp_expressvpn
    networks:
      - transmission-movies
    restart: always
    read_only: true
    environment:
      - S6_READ_ONLY_ROOT=1
      - PUID=64999
      - PGID=64999
      - VIRTUAL_HOST=movies.erdos.local
      - VIRTUAL_PORT=9091
    expose:
      - "9091" # webui
    ports:
      #- "49091:9091/tcp"   # webui
      - "41412:51413/tcp" # p2p traffic
      - "41412:51413/udp" # p2p traffic
    volumes:
      - /docker/data/transmission-movies:/config
      - /docker/media/movies:/downloads/complete
      - transmission-movies-downloads-incomplete:/downloads/incomplete
    tmpfs:
      - /var:rw,exec
  
  
  transmission-tv:
    container_name: transmission-tv
    image: lscr.io/linuxserver/transmission:latest
    networks:
      - transmission-tv
    restart: always
    read_only: true
    environment:
      - S6_READ_ONLY_ROOT=1
      - PUID=64999
      - PGID=64999
      - VIRTUAL_HOST=tv.erdos.local
      - VIRTUAL_PORT=9091
    expose:
      - "9091" # webui
    ports:
      #- "49092:9091/tcp"   # webui
      - "41413:51413/tcp" # p2p traffic
      - "41413:51413/udp" # p2p traffic
    volumes:
      - /docker/data/transmission-tv:/config
      - /docker/media/tv:/downloads/complete
      - transmission-tv-downloads-incomplete:/downloads/incomplete
    tmpfs:
      - /var:rw,exec
  
  
  transmission-books:
    container_name: transmission-books
    image: lscr.io/linuxserver/transmission:latest
    networks:
      - transmission-books
    restart: always
    #read_only: true
    environment:
      - S6_READ_ONLY_ROOT=1
      - PUID=64999
      - PGID=64999
      - VIRTUAL_HOST=books.erdos.local
      - VIRTUAL_PORT=9091
    expose:
      - 9091 # webui
    ports:
      #- "49092:9091/tcp"   # webui
      - "41414:51413/tcp" # p2p traffic
      - "41414:51413/udp" # p2p traffic
    volumes:
      - /docker/data/transmission-books:/config
      - /docker/media/books:/downloads/complete
      - transmission-books-downloads-incomplete:/downloads/incomplete
    tmpfs:
      - /var:rw,exec
  
  


  # movie player
  plex:
    container_name: plex
    image: linuxserver/plex:latest
    network_mode: host
    environment:
      - S6_READ_ONLY_ROOT=1 # https://github.com/just-containers/s6-overlay/pull/176
      - PUID=64999
      - PGID=64999
      - VERSION=docker
      - ADVERTISE_IP=http://10.0.1.10:32400/
    volumes:
      - /docker/data/plex/database2:/config
      - /docker/media/tv:/downloaded_media/tv:ro
      - /docker/media/movies:/downloaded_media/movies:ro
    tmpfs:
      - /var:rw,exec


        #  # media player
        #  # @TODO fix proxy
        #  plex:
        #   container_name: plex
        #   image: lscr.io/linuxserver/plex:latest
        #   network_mode: host # @TODO isolate network
        #   restart: always
        #   environment:
        #     - VERSION=docker
        #     - ADVERTISE_IP=http://10.0.1.20:32400/
        #   volumes:
        #     - /docker/data/plex/database:/config
        #     - /docker/media/tv:/downloaded_media/tv:ro
        #     - /docker/media/movies:/downloaded_media/movies:ro
        #   tmpfs:
        #     - /var:rw,exec
        #     - /transcode:ro

        ## ===========================================================================================================================
        ## ===========================================================================================================================
        ## ===========================================================================================================================
        ## ===========================================================================================================================
        #  plex2:
        #    container_name: plex2
        #    image: linuxserver/plex:1.20.1.3252-a78fef9a9-ls116
        #    network_mode: bridge
        #    networks:
        #       -plex
        #    environment:
        #      - S6_READ_ONLY_ROOT=1 # https://github.com/just-containers/s6-overlay/pull/176
        #      - PUID=64999
        #      - PGID=64999
        #      - VERSION=docker
        #      - UMASK_SET=022
        #      - ADVERTISE_IP=http://10.0.1.10:32400/
        #        #      - VIRTUAL_HOST=plex.erdos.local
        #        #      - VIRTUAL_PORT=32400
        #   rexpose:
        #      - 32400
        #    ports:
        #      # Port listing from Plex website as of 2019-08-18.
        #      # https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/
        #      # Disabled 1900 and 5353 as of 2019-08-18.
        #      # Was running into some sort of conflict when trying to map them with bridge mode.
        #      # Something else on the NAS is using those ports -- home assistant perhaps?
        #      # The ports are for Plex services I don't necessarily need, so they are disabled for now.
        #      - "1900:1900/udp" # (for access to the Plex DLNA Server)
        #      - "5353:5353/udp" # (for older Bonjour/Avahi network discovery)
        #        #- "32400:32400" # (for access to the Plex Media Server) [required]
        #      - "3005:3005" # (for controlling Plex Home Theater via Plex Companion)
        #      - "8324:8324" # (for controlling Plex for Roku via Plex Companion)
        #      - "32410:32410/udp" # (for current GDM network discovery)
        #      - "32412:32412/udp" # (for current GDM network discovery)
        #      - "32413:32413/udp" # (for current GDM network discovery)
        #      - "32414:32414/udp" # (for current GDM network discovery)
        #      - "32469:32469" # (for access to the Plex DLNA Server)
        #    volumes:
        #      - /docker/data/plex/database2:/config
        #      - /docker/media/tv:/downloaded_media/tv:ro
        #      - /docker/media/movies:/downloaded_media/movies:ro
        #    tmpfs:
        #      - /var:rw,exec
        #      - /transcode:ro
        #        ### ===========================================================================================================================
        #        ### ===========================================================================================================================
        #        ### ===========================================================================================================================
        #        ### ===========================================================================================================================
  # Manages your movie library
  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    networks:
      - radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - VIRTUAL_HOST=radarr.erdos.local
      - VIRTUAL_PORT=7878
    expose:
      - 7878 
        #ports:
        #- 7878:7878
    restart: unless-stopped


  # Manages your TV library
  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    networks:
      - sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - VIRTUAL_HOST=sonarr.erdos.local
      - VIRTUAL_PORT=8989
    expose:
      - 8989
        #ports:
        #- 8989:8989
    restart: unless-stopped


  organizr:
    image: organizr/organizr
    container_name: organizer
    networks:
      - organizr
    environment:
      - VIRTUAL_HOST=organizr.erdos.local
      - VIRTUAL_PORT=80
    expose:
      - 80
    #- fpm=false
        #- branch="v2-master"

  jackett:
    image: lscr.io/linuxserver/jackett
    container_name: jackett
    networks:
      - jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - AUTO_UPDATE=true #optional
      - VIRTUAL_HOST=jackett.erdos.local
      - VIRTUAL_PORT=9117
    expose: 
      - 9117
        #- RUN_OPTS=<run options here> #optional
    #volumes:
    #  - <path to data>:/config
    #  - <path to blackhole>:/downloads
    #ports:
    #- 9117:9117
    restart: unless-stopped


# @TODO
# ADD THIS SERVICE
# ADD THIS SERVICE
# Traktarr: Add content to Radarr/Sonarr from Trakt.tv
# https://hub.docker.com/r/containrrr/watchtower
# ADD THIS SERVICE
# ADD THIS SERVICE
# @TODO


volumes:
  transmission-movies-downloads-incomplete:
  transmission-tv-downloads-incomplete:
  transmission-books-downloads-incomplete:

  transmission-vpn-movies-downloads-incomplete:
  transmission-vpn-tv-downloads-incomplete:

  # BOBARR
  web_build:
  api_build:
  api_node_modules:
  web_node_modules:
  db_data:
  redis_data:
  # BOBARR

networks:
  transmission-movies:
  transmission-tv:
  transmission-books:
  jackett:
  sonarr:
  radarr:
  organizr:
  plex:
  wireguard:
  transmission-vpn-movies:
  transmission-vpn-tv:
  proxy:
  whoami:

