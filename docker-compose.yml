---

# notes
# ports are exposed to the host machine
# exposed only allows access by linked services
#
# EXAMPLE DEPLOYS
# https://gist.github.com/Webreaper/81ecda3ecc45fa61a16dfc90cfc4550d
# EXAMPLE DEPLOYS

# CAP_ADD/DROP information: http://rhelblog.redhat.com/2016/10/17/secure-your-containers-with-this-one-weird-trick/

# @TODO: wireguard, flexget, git server, backblaze, anonaddy
# @TODO review these https://teddit.net/r/radarr/comments/hbwnb2/a_list_of_all_companion_tools_and_software/
# @TODO actually restrict networks
# @TODO try https://dockersl.im

# p2p related apps: https://teddit.net/r/radarr/comments/hbwnb2/a_list_of_all_companion_tools_and_software/
#


version: "2.4"

services:

  proxy:
    # @TODO split into two containers
    # >> https://github.com/nginx-proxy/nginx-proxy#separate-containers
    # alpine container
    image: jwilder/nginx-proxy:latest
    #read_only: true
    container_name: proxy
    environment:
      - NETWORK_ACCESS=internal
      - DEFAULT_HOST=whoami.erdos.local
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  whoami:
    # alpine
    image: "jwilder/whoami:latest"
    container_name: whoami
    read_only: true
    expose:
      - 8000
    user: nobody
    environment:
      - NETWORK_ACCESS=internal
      - VIRTUAL_HOST=whoami.erdos.local
      - VIRTUAL_PORT=8000


  movies:
    image: haugene/transmission-openvpn
    container_name: movies
    cap_add:
      - NET_ADMIN
    volumes:
      #/data/transmission-home
      - /volume1/data/docker/apps/transmission-movies/data/watch:/data/watch
      - /volume1/data/docker/apps/transmission-movies/data/completed:/data/completed
      - /volume1/data/docker/apps/transmission-movies/data/incomplete:/data/incomplete
      - /volume1/data/docker/apps/transmission-movies/data/transmission-home:/data/transmission-home
      # > openvpn-pre-start.sh copies the on-disk readonly openvpn config to a directory where it is modified
      # > by this container/service. It is not desirable to have these changes written back to disk.
      # > I much prefer having the modifications done from a pristine config every time
      - /volume1/data/docker/apps/vpn/config/openvpn-pre-start.sh:/scripts/openvpn-pre-start.sh:ro
      - /volume1/data/docker/apps/vpn/config/mullvad_userpass.txt:/config/openvpn-credentials.txt:ro
      - /volume1/data/docker/apps/vpn/config/mullvad_us_nyc.ovpn:/readonly_mullvad_us_nyc.ovpn:ro
    environment:
      - NETWORK_ACCESS=internal
      - VIRTUAL_HOST=movies.erdos.local
      - VIRTUAL_PORT=9091
      - OPENVPN_PROVIDER=custom
      - OPENVPN_CONFIG=mullvad_us_nyc
      - LOCAL_NETWORK=192.168.12.0/24
      - TRANSMISSION_PEER_PORT=59771
      - TRANSMISSION_PORT_FORWARDING_ENABLED=true
      - TRANSMISSION_ENCRYPTION=1 # prefer encrypted connections but not required
      - TRANSMISSION_PREFETCH_ENABLED=true
        #- DROP_DEFAULT_ROUTE=true # maybe works, maybe breaks
      - LOG_TO_STDOUT=true
    expose:
      - 9091
    sysctls:
      - "net.ipv6.conf.all.disable_ipv6=0"

  tv:
    image: haugene/transmission-openvpn
    container_name: tv
    cap_add:
      - NET_ADMIN
    volumes:
      - /volume1/data/docker/apps/transmission-tv/data/watch:/data/watch
      - /volume1/data/docker/apps/transmission-tv/data/completed:/data/completed
      - /volume1/data/docker/apps/transmission-tv/data/incomplete:/data/incomplete
      - /volume1/data/docker/apps/transmission-tv/data/transmission-home:/data/transmission-home
      # > openvpn-pre-start.sh copies the on-disk readonly openvpn config to a directory where it is modified
      # > by this container/service. It is not desirable to have these changes written back to disk.
      # > I much prefer having the modifications done from a pristine config every time
      - /volume1/data/docker/apps/vpn/config/openvpn-pre-start.sh:/scripts/openvpn-pre-start.sh:ro
      - /volume1/data/docker/apps/vpn/config/mullvad_userpass.txt:/config/openvpn-credentials.txt:ro
      - /volume1/data/docker/apps/vpn/config/mullvad_us_nyc.ovpn:/readonly_mullvad_us_nyc.ovpn:ro
    environment:
      - NETWORK_ACCESS=internal
      - VIRTUAL_HOST=tv.erdos.local
      - VIRTUAL_PORT=9091
      - OPENVPN_PROVIDER=custom
      - OPENVPN_CONFIG=mullvad_us_nyc
      - LOCAL_NETWORK=192.168.12.0/24
      - TRANSMISSION_PEER_PORT=57413
      - TRANSMISSION_PORT_FORWARDING_ENABLED=false
      - TRANSMISSION_ENCRYPTION=1 # prefer encrypted connections but not required
      - TRANSMISSION_PREFETCH_ENABLED=true
      - DROP_DEFAULT_ROUTE=true # maybe works, maybe breaks
      - LOG_TO_STDOUT=true
    expose:
      - 9091
    sysctls:
      - "net.ipv6.conf.all.disable_ipv6=0"
  



        #  vpn:
        #    # dev tag *only* includes vpn functionality
        #    image: haugene/transmission-openvpn:dev
        #    environment:
        #      - OPENVPN_PROVIDER=custom
        #        #LOCAL_NETWORK=192.168.0.0/16
        #    cap_add:
        #      - NET_ADMIN
        #    container_name: vpn
        #    volumes:
        #      #- /volume1/data/docker/apps/vpn/config/mullvad_ch_zrh.ovpn:/config/config.ovpn:ro
        #        #- /volume1/data/docker/apps/vpn/config/auth.txt:/config/auth.txt:ro
        #        #- /volume1/data/docker/apps/vpn/config/auth.txt:/config/openvpn-credentials.txt:ro
        #      - /volume1/data/docker/apps/vpn/config:/etc/openvpn/custom
        #      - /volume1/data/docker/apps/vpn/config/mullvad_userpass.txt:/config/openvpn-credentials.txt:ro
        #    # ipv6 must be enabled for Mullvad to work
        #    networks:
        #      - vpn
        #    sysctls:
        #      - "net.ipv6.conf.all.disable_ipv6=0"
        #    expose:
        #      # transmission maybe?
        #      - 9091
        #    ports:
        #      # inbound ports
        #      - 55880:55880/tcp
        #      - 55880:55880/udp
        #      - 58320:58320/tcp
        #      - 58320:58320/udp


        #  transmission-movies:
        #    container_name: transmission-movies
        #    # alpine
        #    image: lscr.io/linuxserver/transmission:latest
        #    restart: always
        #    depends_on: 
        #      - vpn
        #    environment:
        #      - NETWORK_ACCESS=internal
        #      - PUID=64999
        #      - PGID=64999
        #      - VIRTUAL_HOST=movies.erdos.local
        #      - VIRTUAL_PORT=9091
        #    network_mode: "container:vpn"
        #    #expose:
        #      #- "9091" # webui
        #        #ports:
        #        #  - "58320:51413/tcp" # p2p traffic
        #        #  - "58320:51413/udp" # p2p traffic
        #    volumes:
        #      - /volume1/data/docker/apps/transmission-movies/config:/config
        #      - /volume1/data/docker/apps/transmission-movies/media:/downloads/complete
        #      - transmission-movies-downloads-incomplete:/downloads/incomplete
        #    tmpfs:
        #      - /var/run/s6:rw,exec
        #  
        #  
        #  transmission-tv:
        #    container_name: transmission-tv
        #    # alpine
        #    image: lscr.io/linuxserver/transmission:latest
        #    depends_on: 
        #      - vpn
        #    restart: always
        #    environment:
        #      - NETWORK_ACCESS=internal
        #      - PUID=64999
        #      - PGID=64999
        #      - VIRTUAL_HOST=tv.erdos.local
        #      - VIRTUAL_PORT=9091
        #    network_mode: "container:vpn"
        #    #expose:
        #    #- "9091" # webui
        #        #ports:
        #        #  - "55880:51413/tcp" # p2p traffic
        #        #  - "55880:51413/udp" # p2p traffic
        #    volumes:
        #      - /volume1/data/docker/apps/transmission-tv/config:/config
        #      - /volume1/data/docker/apps/transmission-tv/media:/downloads/complete
        #      - transmission-tv-downloads-incomplete:/downloads/incomplete
        #    tmpfs:
        #      - /var/run/s6:rw,exec
        #
  
        #movies:
        #  image: lscr.io/linuxserver/transmission
        #  container_name: transmission
        #  environment:
        #    - PUID=1000
        #    - PGID=1000
        #    - TZ=Europe/London
        #    - TRANSMISSION_WEB_HOME=/combustion-release/ #optional
        #    - USER=username #optional
        #    - PASS=password #optional
        #    - WHITELIST=iplist #optional
        #    - HOST_WHITELIST=dnsnane list #optional
        #    - OPENVPN_PROVIDER=custom
        #    - LOCAL_NETWORK=192.168.0.0/16
        #  volumes:
        #    - <path to data>:/config
        #    - <path to downloads>:/downloads
        #    - <path to watch folder>:/watch
        #  ports:
        #    - 9091:9091
        #    - 51413:51413
        #    - 51413:51413/udp
        #  restart: unless-stopped

  # movie player
  # @TODO try to put this in bridge networking?
  plex:
    container_name: plex
    image: lscr.io/linuxserver/plex:latest
    network_mode: host
    environment:
      - NETWORK_ACCESS=internal
      - PUID=64999
      - PGID=64999
      - VERSION=docker
      - ADVERTISE_IP=http://10.0.1.10:32400/
    volumes:
      - /volume1/data/docker/apps/plex/config:/config
      - /volume1/data/docker/apps/transmission-tv/media:/tv:ro
      - /volume1/data/docker/apps/transmission-movies/media:/movies:ro
    tmpfs:
      - /var/run/s6:exec
      - /app
      - /defaults


  # Manages your movie library
  # @TODO pin down basic hardening
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - NETWORK_ACCESS=internal
      - PUID=64999
      - PGID=64999
      - TZ=Europe/London
      - VIRTUAL_HOST=radarr.erdos.local
      - VIRTUAL_PORT=7878
    volumes:
      - /volume1/data/docker/apps/raddarr/config:/config
      - /volume1/data/docker/apps/transmission-movies/media:/movies:ro
      - /volume1/data/docker/apps/transmission-movies/media:/downloads/complete:ro
    expose:
      - 7878 
    restart: unless-stopped


  # Manages your TV library
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - NETWORK_ACCESS=internal
      - PUID=64999
      - PGID=64999
      - TZ=Europe/London
      - VIRTUAL_HOST=sonarr.erdos.local
      - VIRTUAL_PORT=8989
    volumes:
      - /volume1/data/docker/apps/sonarr/config:/config
      - /volume1/data/docker/apps/transmission-tv/media:/tv:ro
      - /volume1/data/docker/apps/transmission-tv/media:/downloads/complete:ro
    expose:
      - 8989
    restart: unless-stopped


  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    volumes:
      - /volume1/data/docker/apps/jackett/config:/config
    environment:
      - NETWORK_ACCESS=internal
      - PUID=64999
      - PGID=64999
      - TZ=Europe/London
      - AUTO_UPDATE=true #optional
      - VIRTUAL_HOST=jackett.erdos.local
      - VIRTUAL_PORT=9117
    expose: 
      - 9117


  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - NETWORK_ACCESS=internal
      - PUID=64999
      - PGID=64999
      - TZ=Europe/London
      - VIRTUAL_HOST=bazarr.erdos.local
      - VIRTUAL_PORT=6767
    volumes:
      - /volume1/data/docker/apps/bazarr/config:/config
      - /volume1/data/docker/apps/transmission-tv/media:/tv
      - /volume1/data/docker/apps/tranmission-movies/media:/movies
    expose:
      - 6767
    restart: always


  ombi:
    #image: lscr.io/linuxserver/ombi
    image: linuxserver/ombi:latest
    container_name: ombi
    environment:
      - NETWORK_ACCESS=internal
      - PUID=64999
      - PGID=64999
      - TZ=Europe/London
        #- BASE_URL=/ombi #optional
      - VIRTUAL_HOST=ombi.erdos.local
      - VIRTUAL_PORT=3579
    volumes:
      - /volume1/data/docker/apps/ombi/config:/config
    expose: 
      - 3579
    restart: unless-stopped

#  organizr:
#    # alpine
#    image: organizr/organizr:latest
#    container_name: organizr
#    cap_drop:
#      - ALL
#    cap_add:
#      - SETUID
#      - SETGID
#      - CHOWN
#    networks:
#      - organizr
#      - proxy
#      - sonarr
#    environment:
#      - S6_READ_ONLY_ROOT=1
#      - VIRTUAL_HOST=organizr.erdos.local,org.erdos.local
#      - VIRTUAL_PORT=80
#      - NETWORK_ACCESS=internal
#      - PUID=64999
#      - PGID=64999
#    expose:
#      - 80
#    volumes:
#      - /config




# @TODO
# ADD THIS SERVICE
# ADD THIS SERVICE
# Traktarr: Add content to Radarr/Sonarr from Trakt.tv
# https://hub.docker.com/r/containrrr/watchtower
# organizr/organizr
# ADD THIS SERVICE
# ADD THIS SERVICE
# @TODO


volumes:
  transmission-movies-downloads-incomplete:
  transmission-tv-downloads-incomplete:
  transmission-books-downloads-incomplete:

  transmission-vpn-movies-downloads-incomplete:
  transmission-vpn-tv-downloads-incomplete:

  # BOBARR
  web_build:
  api_build:
  api_node_modules:
  web_node_modules:
  db_data:
  redis_data:
  # BOBARR
  copy_openvpn_config:

networks:
  vpn:
